/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scss/style.scss":
/*!*****************************!*\
  !*** ./src/scss/style.scss ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://rss-virtual-keyboard/./src/scss/style.scss?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _script_Keyboard_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./script/Keyboard.js */ \"./src/script/Keyboard.js\");\n/* harmony import */ var _script_const_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./script/const.js */ \"./src/script/const.js\");\n/* eslint-disable no-param-reassign */\n/* eslint-disable import/extensions */\n\n\n\n\nconst rows = [\n  ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace'],\n  ['Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash', 'Delete'],\n  ['CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Enter'],\n  ['ShiftLeft', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'ArrowUp', 'ShiftRight'],\n  ['ControlLeft', 'MetaLeft', 'AltLeft', 'Space', 'AltRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'ControlRight'],\n];\n\nlet lang = JSON.parse(window.localStorage.getItem('lang')) || 'ru';\nlet keyBase = '';\nconst changeBase = () => {\n  if (lang === 'ru') {\n    keyBase = _script_const_js__WEBPACK_IMPORTED_MODULE_1__.ru;\n  } else if (lang === 'en') {\n    keyBase = _script_const_js__WEBPACK_IMPORTED_MODULE_1__.en;\n  }\n};\n\nchangeBase();\n\nconst main = document.createElement('main');\nmain.className = 'main';\nmain.innerHTML = `<h1 class='title'>RSS Виртуальная клавиатура</h1>\n<p class='text'>RSS Виртуальная клавиатура</p>\n<p class='text'>Для переключения языка комбинация: левыe ctrl + alt</p>`;\nconst out = document.createElement('textarea');\nout.className = 'out';\nout.setAttribute('rows', '10');\nout.setAttribute('cols', '70');\nout.setAttribute('spellcheck', 'false');\nout.setAttribute('autofocus', '');\nmain.append(out);\ndocument.body.prepend(main);\n\nconst keyboard = new _script_Keyboard_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](rows, keyBase);\nkeyboard.generate();\nmain.append(keyboard.container);\n\nfunction printLetter(key) {\n  const isShift = keyboard.keyPressed.ShiftLeft || keyboard.keyPressed.ShiftRight;\n  if (keyboard.keyPressed.CapsLock && isShift) {\n    out.setRangeText(key.small, out.selectionStart, out.selectionEnd, 'end');\n  } else if (keyboard.keyPressed.CapsLock || isShift) {\n    out.setRangeText(key.shift, out.selectionStart, out.selectionEnd, 'end');\n  } else {\n    out.setRangeText(key.small, out.selectionStart, out.selectionEnd, 'end');\n  }\n}\n\nfunction printDigit(key) {\n  const isShift = keyboard.keyPressed.ShiftLeft || keyboard.keyPressed.ShiftRight;\n  if (isShift) {\n    out.setRangeText(key.shift, out.selectionStart, out.selectionEnd, 'end');\n  } else {\n    out.setRangeText(key.small, out.selectionStart, out.selectionEnd, 'end');\n  }\n}\n\nfunction initLang() {\n  keyboard.keyBase = keyBase;\n  keyboard.keys.forEach((element) => {\n    const obj = keyBase.find((el) => el.code === element.code);\n    element.letter.innerHTML = obj.small;\n    element.small = obj.small;\n    element.subLetter.innerHTML = obj.shift;\n    element.shift = obj.shift;\n    if (element.code === 'Backquote') {\n      element.type = obj.type;\n      element.containerKey.classList.remove('letter');\n      element.containerKey.classList.remove('digit');\n      if (obj.type === 'digit') {\n        element.containerKey.classList.add('digit');\n      } else {\n        element.containerKey.classList.add('letter');\n      }\n    }\n  });\n}\n\nfunction changeLang() {\n  if (lang === 'ru') {\n    lang = 'en';\n  } else {\n    lang = 'ru';\n  }\n\n  changeBase();\n  initLang();\n}\n\nfunction pressFn(key) {\n  if (key.code === 'ShiftRight' || key.code === 'ShiftLeft') {\n    keyboard.keys.forEach((el) => {\n      if (!el.isFn) {\n        el.containerKey.classList.add('key_shift');\n      }\n    });\n    if (keyboard.keyPressed.AltLeft || keyboard.keyPressed.AltRight) {\n      changeLang();\n    }\n  }\n\n  if (key.code === 'AltRight' || key.code === 'AltLeft') {\n    if (keyboard.keyPressed.ShiftRight || keyboard.keyPressed.ShiftLeft) {\n      changeLang();\n    }\n  }\n}\n\nfunction unPressFn(key) {\n  if (key.code === 'ShiftRight' || key.code === 'ShiftLeft') {\n    keyboard.keys.forEach((el) => {\n      if (!el.isFn) {\n        el.containerKey.classList.remove('key_shift');\n      }\n    });\n  }\n}\n\nconst pressKey = (key) => {\n  if (key.type === 'letter') {\n    printLetter(key);\n  }\n  if (key.type === 'digit') {\n    printDigit(key);\n  }\n  if (key.isFn) {\n    pressFn(key);\n  }\n};\n\nconst pressVirtualKeyboardKey = (e) => {\n  const keyOrNot = e.target.closest('.key');\n  if (!keyOrNot) {\n    return;\n  }\n  keyOrNot.classList.add('key_pressed');\n  if (!keyboard.keyPressed[keyOrNot.dataset.code]) {\n    keyboard.keyPressed[keyOrNot.dataset.code] = true;\n  }\n  const key = keyboard.keys.find((element) => keyOrNot.dataset.code === element.code);\n  pressKey(key);\n};\n\nconst upVirtualKeyboardKey = (e) => {\n  const keyOrNot = e.target.closest('.key');\n  if (!keyOrNot) {\n    return;\n  }\n  keyOrNot.classList.remove('key_pressed');\n  keyboard.keyPressed[keyOrNot.dataset.code] = false;\n  const key = keyboard.keys.find((element) => keyOrNot.dataset.code === element.code);\n  if (key.isFn) {\n    unPressFn(key);\n  }\n};\n\nconst pressKeyboardKey = (e) => {\n  e.preventDefault();\n  const key = keyboard.keys.find((element) => e.code === element.code);\n  key.containerKey.classList.add('key_pressed');\n  if (!keyboard.keyPressed[key.containerKey.dataset.code]) {\n    keyboard.keyPressed[key.containerKey.dataset.code] = true;\n  }\n  pressKey(key);\n};\n\nconst upKeyboardKey = (e) => {\n  const key = keyboard.keys.find((element) => e.code === element.code);\n  key.containerKey.classList.remove('key_pressed');\n  keyboard.keyPressed[key.containerKey.dataset.code] = false;\n  if (key.isFn) {\n    unPressFn(key);\n  }\n};\n\nkeyboard.container.addEventListener('mousedown', pressVirtualKeyboardKey);\ndocument.addEventListener('keydown', pressKeyboardKey);\nkeyboard.container.addEventListener('mouseup', upVirtualKeyboardKey);\ndocument.addEventListener('keyup', upKeyboardKey);\nkeyboard.container.addEventListener('mouseout', upVirtualKeyboardKey);\n\n\n//# sourceURL=webpack://rss-virtual-keyboard/./src/index.js?");

/***/ }),

/***/ "./src/script/Key.js":
/*!***************************!*\
  !*** ./src/script/Key.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Key)\n/* harmony export */ });\n/* harmony import */ var _const_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./const.js */ \"./src/script/const.js\");\n/* eslint-disable import/extensions */\n\n\nclass Key {\n  constructor({\n    small, shift, code, type, isFn,\n  }) {\n    this.small = small;\n    this.shift = shift;\n    this.code = code;\n    this.type = type;\n    this.isFn = isFn;\n    this.subLetter = this.createSub();\n    this.letter = this.createLetter();\n    this.containerKey = this.createKey();\n  }\n\n  createSub() {\n    const sub = document.createElement('p');\n    sub.className = 'sub';\n    sub.innerHTML = this.shift;\n    return sub;\n  }\n\n  createLetter() {\n    const smallLetter = document.createElement('p');\n    smallLetter.className = 'letter';\n    smallLetter.innerHTML = this.small;\n    return smallLetter;\n  }\n\n  createKey() {\n    const conteiner = document.createElement('div');\n    conteiner.className = `key ${this.type}`;\n    if (this.isFn) {\n      conteiner.classList.add(this.small);\n    }\n    if (this.code === 'Space') {\n      conteiner.classList.add('Space');\n    }\n    conteiner.dataset.code = this.code;\n    conteiner.dataset.fn = this.isFn;\n    conteiner.append(this.subLetter, this.letter);\n    return conteiner;\n  }\n}\n\n\n//# sourceURL=webpack://rss-virtual-keyboard/./src/script/Key.js?");

/***/ }),

/***/ "./src/script/Keyboard.js":
/*!********************************!*\
  !*** ./src/script/Keyboard.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Keyboard)\n/* harmony export */ });\n/* harmony import */ var _Key_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Key.js */ \"./src/script/Key.js\");\n/* eslint-disable import/extensions */\n\n\nclass Keyboard {\n  constructor(rows, keyBase) {\n    this.rows = rows;\n\n    this.keys = [];\n    this.keyPressed = {};\n    this.caps = false;\n    this.keyBase = keyBase;\n  }\n\n  generate() {\n    this.container = document.createElement('div');\n    this.container.className = 'keyboard';\n    this.rows.forEach((element) => {\n      const row = document.createElement('div');\n      row.className = 'keyboard__row';\n      this.container.append(row);\n      element.forEach((code) => {\n        const keyObj = this.keyBase.find((key) => key.code === code);\n        const button = new _Key_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](keyObj);\n        this.keys.push(button);\n        row.append(button.containerKey);\n      });\n    });\n  }\n}\n\n\n//# sourceURL=webpack://rss-virtual-keyboard/./src/script/Keyboard.js?");

/***/ }),

/***/ "./src/script/const.js":
/*!*****************************!*\
  !*** ./src/script/const.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"en\": () => (/* binding */ en),\n/* harmony export */   \"ru\": () => (/* binding */ ru)\n/* harmony export */ });\nconst ru = [\n  {\n    small: 'ё',\n    shift: 'Ё',\n    code: 'Backquote',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: '1',\n    shift: '!',\n    code: 'Digit1',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '2',\n    shift: '\"',\n    code: 'Digit2',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '3',\n    shift: '№',\n    code: 'Digit3',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '4',\n    shift: ';',\n    code: 'Digit4',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '5',\n    shift: '%',\n    code: 'Digit5',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '6',\n    shift: ':',\n    code: 'Digit6',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '7',\n    shift: '?',\n    code: 'Digit7',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '8',\n    shift: '*',\n    code: 'Digit8',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '9',\n    shift: '(',\n    code: 'Digit9',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '0',\n    shift: ')',\n    code: 'Digit0',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '-',\n    shift: '_',\n    code: 'Minus',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '=',\n    shift: '+',\n    code: 'Equal',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: 'Backspace',\n    shift: 'Backspace',\n    code: 'Backspace',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Tab',\n    shift: 'Tab',\n    code: 'Tab',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'й',\n    shift: 'Й',\n    code: 'KeyQ',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'ц',\n    shift: 'Ц',\n    code: 'KeyW',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'у',\n    shift: 'У',\n    code: 'KeyE',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'к',\n    shift: 'К',\n    code: 'KeyR',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'е',\n    shift: 'Е',\n    code: 'KeyT',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'н',\n    shift: 'Н',\n    code: 'KeyY',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'г',\n    shift: 'Г',\n    code: 'KeyU',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'ш',\n    shift: 'Ш',\n    code: 'KeyI',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'щ',\n    shift: 'Щ',\n    code: 'KeyO',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'з',\n    shift: 'З',\n    code: 'KeyP',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'х',\n    shift: 'Х',\n    code: 'BracketLeft',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'ъ',\n    shift: 'Ъ',\n    code: 'BracketRight',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: '\\\\',\n    shift: '/',\n    code: 'Backslash',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'Delete',\n    shift: 'Delete',\n    code: 'Delete',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'CapsLock',\n    shift: 'CapsLock',\n    code: 'CapsLock',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'ф',\n    shift: 'Ф',\n    code: 'KeyA',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'ы',\n    shift: 'Ы',\n    code: 'KeyS',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'в',\n    shift: 'В',\n    code: 'KeyD',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'а',\n    shift: 'А',\n    code: 'KeyF',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'п',\n    shift: 'П',\n    code: 'KeyG',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'р',\n    shift: 'Р',\n    code: 'KeyH',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'о',\n    shift: 'О',\n    code: 'KeyJ',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'л',\n    shift: 'Л',\n    code: 'KeyK',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'д',\n    shift: 'Д',\n    code: 'KeyL',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'ж',\n    shift: 'Ж',\n    code: 'Semicolon',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'э',\n    shift: 'Э',\n    code: 'Quote',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'Enter',\n    shift: 'Enter',\n    code: 'Enter',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Shift',\n    shift: 'Shift',\n    code: 'ShiftLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'я',\n    shift: 'Я',\n    code: 'KeyZ',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'ч',\n    shift: 'Ч',\n    code: 'KeyX',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'с',\n    shift: 'С',\n    code: 'KeyC',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'м',\n    shift: 'М',\n    code: 'KeyV',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'и',\n    shift: 'И',\n    code: 'KeyB',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'т',\n    shift: 'Т',\n    code: 'KeyN',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'ь',\n    shift: 'Ь',\n    code: 'KeyM',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'б',\n    shift: 'Б',\n    code: 'Comma',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'ю',\n    shift: 'Ю',\n    code: 'Period',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: '.',\n    shift: ',',\n    code: 'Slash',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: '&#8593',\n    shift: '&#8593',\n    code: 'ArrowUp',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Shift',\n    shift: 'Shift',\n    code: 'ShiftRight',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Ctrl',\n    shift: 'Ctrl',\n    code: 'ControlLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Win',\n    shift: 'Win',\n    code: 'MetaLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Alt',\n    shift: 'Alt',\n    code: 'AltLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: ' ',\n    shift: ' ',\n    code: 'Space',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'Alt',\n    shift: 'Alt',\n    code: 'AltRight',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Ctrl',\n    shift: 'Ctrl',\n    code: 'ControlRight',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: '&#8592',\n    shift: '&#8592',\n    code: 'ArrowLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: '&#8595',\n    shift: '&#8595',\n    code: 'ArrowDown',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: '&#8594',\n    shift: '&#8594',\n    code: 'ArrowRight',\n    type: 'fn',\n    isFn: true,\n  },\n];\n\nconst en = [\n  {\n    small: '`',\n    shift: '~',\n    code: 'Backquote',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '1',\n    shift: '!',\n    code: 'Digit1',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '2',\n    shift: '@',\n    code: 'Digit2',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '3',\n    shift: '#',\n    code: 'Digit3',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '4',\n    shift: '$',\n    code: 'Digit4',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '5',\n    shift: '%',\n    code: 'Digit5',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '6',\n    shift: '^',\n    code: 'Digit6',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '7',\n    shift: '&',\n    code: 'Digit7',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '8',\n    shift: '*',\n    code: 'Digit8',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '9',\n    shift: '(',\n    code: 'Digit9',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '0',\n    shift: ')',\n    code: 'Digit0',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '-',\n    shift: '_',\n    code: 'Minus',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: '=',\n    shift: '+',\n    code: 'Equal',\n    type: 'digit',\n    isFn: false,\n  },\n  {\n    small: 'Backspace',\n    shift: 'Backspace',\n    code: 'Backspace',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Tab',\n    shift: 'Tab',\n    code: 'Tab',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'q',\n    shift: 'Q',\n    code: 'KeyQ',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'w',\n    shift: 'W',\n    code: 'KeyW',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'e',\n    shift: 'E',\n    code: 'KeyE',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'r',\n    shift: 'R',\n    code: 'KeyR',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 't',\n    shift: 'T',\n    code: 'KeyT',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'y',\n    shift: 'Y',\n    code: 'KeyY',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'u',\n    shift: 'U',\n    code: 'KeyU',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'i',\n    shift: 'I',\n    code: 'KeyI',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'o',\n    shift: 'O',\n    code: 'KeyO',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'p',\n    shift: 'P',\n    code: 'KeyP',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: '[',\n    shift: '{',\n    code: 'BracketLeft',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: ']',\n    shift: '}',\n    code: 'BracketRight',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: '\\\\',\n    shift: '|',\n    code: 'Backslash',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'Delete',\n    shift: 'Delete',\n    code: 'Delete',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'CapsLock',\n    shift: 'CapsLock',\n    code: 'CapsLock',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'a',\n    shift: 'A',\n    code: 'KeyA',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 's',\n    shift: 'S',\n    code: 'KeyS',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'd',\n    shift: 'D',\n    code: 'KeyD',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'f',\n    shift: 'F',\n    code: 'KeyF',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'g',\n    shift: 'G',\n    code: 'KeyG',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'h',\n    shift: 'H',\n    code: 'KeyH',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'j',\n    shift: 'J',\n    code: 'KeyJ',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'k',\n    shift: 'K',\n    code: 'KeyK',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'l',\n    shift: 'L',\n    code: 'KeyL',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: ';',\n    shift: ':',\n    code: 'Semicolon',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: \"'\",\n    shift: '\"',\n    code: 'Quote',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'Enter',\n    shift: 'Enter',\n    code: 'Enter',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Shift',\n    shift: 'Shift',\n    code: 'ShiftLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'z',\n    shift: 'Z',\n    code: 'KeyZ',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'x',\n    shift: 'X',\n    code: 'KeyX',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'c',\n    shift: 'C',\n    code: 'KeyC',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'v',\n    shift: 'v',\n    code: 'KeyV',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'b',\n    shift: 'B',\n    code: 'KeyB',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'n',\n    shift: 'N',\n    code: 'KeyN',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'm',\n    shift: 'M',\n    code: 'KeyM',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: ',',\n    shift: '<',\n    code: 'Comma',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: '.',\n    shift: '>',\n    code: 'Period',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: '/',\n    shift: '?',\n    code: 'Slash',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: '&#8593',\n    shift: '&#8593',\n    code: 'ArrowUp',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Shift',\n    shift: 'Shift',\n    code: 'ShiftRight',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Ctrl',\n    shift: 'Ctrl',\n    code: 'ControlLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Win',\n    shift: 'Win',\n    code: 'MetaLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Alt',\n    shift: 'Alt',\n    code: 'AltLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: ' ',\n    shift: ' ',\n    code: 'Space',\n    type: 'letter',\n    isFn: false,\n  },\n  {\n    small: 'Alt',\n    shift: 'Alt',\n    code: 'AltRight',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: 'Ctrl',\n    shift: 'Ctrl',\n    code: 'ControlRight',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: '&#8592',\n    shift: '&#8592',\n    code: 'ArrowLeft',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: '&#8595',\n    shift: '&#8595',\n    code: 'ArrowDown',\n    type: 'fn',\n    isFn: true,\n  },\n  {\n    small: '&#8594',\n    shift: '&#8594',\n    code: 'ArrowRight',\n    type: 'fn',\n    isFn: true,\n  },\n\n];\n\n\n\n\n//# sourceURL=webpack://rss-virtual-keyboard/./src/script/const.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/scss/style.scss");
/******/ 	
/******/ })()
;